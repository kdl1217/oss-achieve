plugins {
    id 'java'
    id 'io.freefair.lombok' version '5.2.1' apply false
    id 'io.spring.dependency-management' version '1.0.10.RELEASE' apply false
}

allprojects {
    group 'org.kon'
    version '1.0-SNAPSHOT'

    ext {
        publishUsername = "deployment"
        publishPassword = "deployment"
        springBootVersion = '2.4.2'
    }

    repositories {
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url("https://repository.incarcloud.com/content/groups/public") }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'maven-publish'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'io.freefair.lombok'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenCentral()
        maven { url("https://maven.aliyun.com/repository/public") }
        maven { url("https://repository.incarcloud.com/content/groups/public") }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
        }

        dependencies {
            dependencySet(group: "org.slf4j", version: "1.7.30") {
                entry "slf4j-api"
                entry "slf4j-simple"
                entry "slf4j-log4j12"
            }

            dependency 'com.aliyun.oss:aliyun-sdk-oss:3.14.0'
        }
    }

    dependencies {
        implementation "org.slf4j:slf4j-api"

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    }

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
    }

    compileJava {
        options.encoding = "UTF-8"
        options.compilerArgs << "-Xlint:unchecked"
    }

    compileTestJava {
        options.encoding = "UTF-8"
        options.compilerArgs << "-Xlint:unchecked"
    }

    test {
        useJUnitPlatform()
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = "sources"
    }

    task checkstyle(type: Checkstyle) {
        configFile file("${rootDir}/config/checkstyle/checkstyle.xml")
        ignoreFailures true
        showViolations true
        source = fileTree("src")
        include "**/*.java"
        exclude "**/test/**"
        exclude "**/build/**"
        classpath = files()
    }

    task removeLombokConfig() {
        def subProjectPath = project.projectDir
        if (null != subProjectPath) {
            def lombokConfigFile = new File(subProjectPath, "lombok.config")
            if (lombokConfigFile.exists()) {
                lombokConfigFile.delete()
            }
        }
    }

    task removeOutputLog() {
        def subProjectPath = project.projectDir
        if (null != subProjectPath) {
            def logPath = new File(subProjectPath, "output.log")
            if (logPath.exists()) {
                logPath.delete()
            }
        }
    }

    /** 发布到本地MAVEN仓库使用 gradle PublishToMavenLocal
     发布到远程MAVEN仓库使用 gradle publishMavenPublicationToMavenRepository*/
    publishing {
        // https://docs.gradle.org/current/dsl/org.gradle.api.publish.maven.MavenPublication.html
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourceJar
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
            }
        }
        repositories {
            if (project.version.contains("-")) {
                // Snapshots
                maven {
                    url "https://repository.incarcloud.com/content/repositories/snapshots/"
                    credentials {
                        username publishUsername
                        password publishPassword
                    }
                }
            } else {
                // Releases
                maven {
                    url "https://repository.incarcloud.com/content/repositories/releases/"
                    credentials {
                        username publishUsername
                        password publishPassword
                    }
                }
            }
        }
    }

    jar {
        exclude("**/application-*.yml")
    }

    defaultTasks "assemble"
}